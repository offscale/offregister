{
  "name": "Fantom",
  "description": "Default Fantom strategy",
  "version": "0.0.1",
  "provider": {
    "$ref": "env:OFFAUTH_JSON|offutils.str_from_file | json.loads"
  },
  "register": {
    "fantom/*": [
      {
        "module": "offregister-bootstrap",
        "type": "fabric"
      },
      {
        "module": "offregister-inline",
        "kwargs": {
          "sudo": [
            "apt-get update && apt-get install -y jq gcc joe mc tree build-essential"
          ]
        },
        "type": "fabric"
      },
      {
        "module": "offregister-go",
        "type": "fabric"
      },
      {
        "module": "offregister-git",
        "kwargs": {
          "GIT_DIR": "/home/ubuntu/go/src/github.com/SamuelMarks/dag1",
          "GIT_REPO": "https://github.com/SamuelMarks/dag1",
          "GIT_BRANCH": "master",
          "GIT_RESET_TO_FIRST": false,
          "skip_reset": false,
          "use_sudo": false
        },
        "type": "fabric"
      },
      {
        "module": "offregister-inline",
        "kwargs": {
          "run": [
            "rm -rf /home/ubuntu/go/src/github.com/Fantom-foundation/go-evm"
          ]
        },
        "type": "fabric"
      },

      {
        "module": "offregister-git",
        "kwargs": {
          "GIT_DIR": "/home/ubuntu/go/src/github.com/SamuelMarks/go-evm",
          "GIT_REPO": "https://github.com/SamuelMarks/go-evm",
          "GIT_BRANCH": "master",
          "GIT_RESET_TO_FIRST": false,
          "skip_reset": false,
          "use_sudo": false
        },
        "type": "fabric"
      },
      {
        "module": "offregister-inline",
        "kwargs": {
          "run": [
            "ln -s /home/ubuntu/go/src/github.com/SamuelMarks/go-evm /home/ubuntu/go/src/github.com/Fantom-foundation/go-evm",
            "logout",
            "source ~/.bashrc",
            "command -v glide || curl https://glide.sh/get | sh",
            "logout",
            "go get -v github.com/SamuelMarks/batch-ethkey"
          ]
        },
        "type": "fabric"
      },
      {
        "module": "offregister-inline",
        "kwargs": {
          "run": [

          ],
          "CWD": "/home/ubuntu/go/src/github.com/Fantom-foundation/go-evm"
        },
        "type": "fabric"
      }
    ]
  },
  "_comments": [
    "make vendor build",
    {
      "module": "offregister-bootstrap",
      "type": "fabric"
    },
    {
      "module": "offregister-taiga",
      "kwargs": {
        "LISTEN_PORT": 443,
        "SERVER_NAME": null,
        "TAIGA_ROOT": "/var/www/taiga"
      },
      "type": "fabric"
    },
    {
      "module": "offregister-docker",
      "type": "fabric"
    },
    {
      "module": "offregister-go",
      "type": "fabric"
    },
    {
      "module": "offregister-inline",
      "kwargs": {
        "run": [
          "command -v glide || curl https://glide.sh/get | sh",
          "go get -d github.com/andrecronje/evm/cmd/evm",
          "cd /home/ubuntu/go/src/github.com/andrecronje/evm      && glide install",
          "go get -d github.com/andrecronje/dag1/cmd/dag1",
          "cd /home/ubuntu/go/src/github.com/andrecronje/dag1 && glide install"
        ]
      },
      "type": "fabric"
    },
    {
      "module": "offregister-inline",
      "kwargs": {
        "run": [
          "/home/ubuntu/go/src/github.com/andrecronje/evm/scripts/build.bash"
        ]
      },
      "type": "fabric"
    },
    {
      "module": "offregister-hook",
      "kwargs": {
        "HOOK_IP": "127.0.0.1",
        "HOOK_PORT": 9000,
        "HOOK_VERBOSE": true,
        "HOOK_HOOKS_JSON": [
          {
            "id": "crossbuild-webhook",
            "execute-command": "/home/ubuntu/go/src/github.com/andrecronje/evm/scripts/build.bash",
            "command-working-directory": "/home/ubuntu/go/src/github.com/andrecronje/evm",
            "include-command-output-in-response": true,
            "pass-environment-to-command": [
              {
                "source": "string",
                "envname": "GOPATH",
                "name": "/home/ubuntu/"
              },
              {
                "source": "string",
                "envname": "PATH",
                "name": "$PATH:/usr/local/go/bin:/home/ubuntu/go/bin"
              }
            ]
          }
        ],
        "NGINX_CONF": "taiga"
      },
      "run_cmds": {
        "op": "in",
        "val": [
          "configure_nginx1"
        ]
      },
      "type": "fabric"
    },
    {
      "module": "offregister-gopherci",
      "type": "fabric"
    },
    {
      "module": "offregister-gocd",
      "type": "fabric"
    },
    {
      "module": "offregister-taiga",
      "kwargs": {
        "LISTEN_PORT": 443,
        "SERVER_NAME": null,
        "TAIGA_ROOT": "/var/www/taiga"
      },
      "type": "fabric"
    },
    "3/9/2018",
    {
      "module": "offregister-go",
      "type": "fabric"
    },
    {
      "module": "offregister-git",
      "kwargs": {
        "GIT_DIR": "/home/ubuntu/go/src/github.com/andrecronje/evm",
        "GIT_REPO": "https://github.com/SamuelMarks/evm",
        "GIT_BRANCH": "master",
        "skip_reset": false,
        "use_sudo": false
      },
      "type": "fabric"
    },
    {
      "module": "offregister-inline",
      "kwargs": {
        "run": [
          "command -v glide || curl https://glide.sh/get | sh",
          "go get -d github.com/andrecronje/evm/cmd/evm",
          "cd /home/ubuntu/go/src/github.com/andrecronje/evm && glide install",
          "go get -d github.com/andrecronje/dag1/cmd/dag1",
          "cd /home/ubuntu/go/src/github.com/andrecronje/dag1 && glide install"
        ]
      },
      "type": "fabric"
    },
    {
      "module": "offregister-inline",
      "kwargs": {
        "sudo": [
          "apt-get install -y libc6-dev* gcc-multilib g++-multilib",
          "apt-get install -y rpm"
        ]
      },
      "type": "fabric"
    },
    {
      "module": "offregister-inline",
      "kwargs": {
        "run": [
          "command -v dep || curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh",
          "command -v goreleaser || ( go get -d github.com/goreleaser/goreleaser && cd /home/ubuntu/go/src/github.com/goreleaser/goreleaser && dep ensure -vendor-only && make setup build && mv /home/ubuntu/go/src/github.com/goreleaser/goreleaser/goreleaser /home/ubuntu/go/bin )",
          "cd /home/ubuntu/go/src/github.com/andrecronje/evm && goreleaser --rm-dist"
        ],
        "ENV": {
          "GITHUB_TOKEN": {
            "$ref": "env:GITHUB_TOKEN"
          }
        }
      },
      "type": "fabric"
    },
    {
      "module": "offregister-bootstrap",
      "type": "fabric"
    },
    {
      "module": "offregister-docker",
      "type": "fabric"
    },
    {
      "module": "offregister-go",
      "type": "fabric"
    },
    "WORKING:::",
    {
      "module": "offregister-bootstrap",
      "type": "fabric"
    },
    {
      "module": "offregister-go",
      "type": "fabric"
    },
    {
      "module": "offregister-inline",
      "kwargs": {
        "run": [
          "logout",
          "source ~/.bashrc",
          "command -v glide || curl https://glide.sh/get | sh",
          "logout",
          "go get -v github.com/SamuelMarks/batch-ethkey",
          "mkdir -p \"/home/ubuntu/go/src/github.com/SamuelMarks/dag1\"",
          "[ -f \"/home/ubuntu/go/src/github.com/SamuelMarks/dag1/README.md\" ] || git clone https://github.com/SamuelMarks/dag1 \"/home/ubuntu/go/src/github.com/SamuelMarks/dag1\""
        ],
        "sudo": [
          "apt-get update && apt-get install -y jq gcc joe mc"
        ]
      },
      "type": "fabric"
    }
  ],
  "purpose": [
    "any-cluster"
  ],
  "etcd_server": "http://localhost:2379",
  "default_pick": "first"
}
